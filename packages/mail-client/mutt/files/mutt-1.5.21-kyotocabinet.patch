--- a/configure.ac	2012-12-26 18:32:28.930547124 +0100
+++ b/configure.ac	2012-12-26 18:38:39.495914419 +0100
@@ -835,6 +835,8 @@
   [Enable header caching]))
 AC_ARG_WITH(tokyocabinet, AC_HELP_STRING([--without-tokyocabinet],
   [Don't use tokyocabinet even if it is available]))
+AC_ARG_WITH(kyotocabinet, AC_HELP_STRING([--without-kyotocabinet],
+  [Don't use kyotocabinet even if it is available]))
 AC_ARG_WITH(qdbm, AC_HELP_STRING([--without-qdbm],
   [Don't use qdbm even if it is available]))
 AC_ARG_WITH(gdbm, AC_HELP_STRING([--without-gdbm],
@@ -858,6 +860,10 @@
     then
       db_requested=tc
     fi
+    if test -n "$with_kyotocabinet" && test "$with_kyotocabinet" != "no"
+    then
+      db_requested=kc
+    fi
     if test -n "$with_qdbm" && test "$with_qdbm" != "no"
     then
       if test "$db_requested" != "auto"
@@ -887,7 +893,7 @@
     fi
     
     dnl -- Tokyo Cabinet --
-    if test "$with_tokyocabinet" != "no" \
+	 if test "$with_tokyocabinet" != "no" \
 	    && test "$db_requested" = auto -o "$db_requested" = tc
     then
       if test -n "$with_tokyocabinet" && test "$with_tokyocabinet" != "yes"
@@ -909,6 +915,29 @@
       fi
     fi
 
+    dnl -- Kyoto Cabinet --
+	 if test "$with_kyotocabinet" != "no" \
+	    && test "$db_requested" = auto -o "$db_requested" = kc
+    then
+      if test -n "$with_kyotocabinet" && test "$with_kyotocabinet" != "yes"
+      then
+        CPPFLAGS="$CPPFLAGS -I$with_kyotocabinet/include"
+        LDFLAGS="$LDFLAGS -L$with_kyotocabinet/lib"
+      fi
+
+      AC_CHECK_HEADER(kclangc.h,
+      AC_CHECK_LIB(kyotocabinet, kcdbopen,
+        [MUTTLIBS="$MUTTLIBS -lkyotocabinet"
+         AC_DEFINE(HAVE_KC, 1, [Kyoto Cabinet Support])
+         db_found=kc],
+        [CPPFLAGS="$OLDCPPFLAGS"
+         LDFLAGS="$OLDLDFLAGS"]))
+      if test "$db_requested" != auto && test "$db_found" != "$db_requested"
+      then
+        AC_MSG_ERROR([Kyoto Cabinet could not be used. Check config.log for details.])
+      fi
+    fi
+
     dnl -- QDBM --
     if test "$with_qdbm" != "no" && test $db_found = no \
 	    && test "$db_requested" = auto -o "$db_requested" = qdbm
--- a/hcache.c	2012-12-26 18:32:28.902547474 +0100
+++ b/hcache.c	2012-12-26 18:34:11.648262976 +0100
@@ -28,6 +28,8 @@
 #include <villa.h>
 #elif HAVE_TC
 #include <tcbdb.h>
+#elif HAVE_KC
+#include <kclangc.h>
 #elif HAVE_GDBM
 #include <gdbm.h>
 #elif HAVE_DB4
@@ -61,6 +63,13 @@
   char *folder;
   unsigned int crc;
 } HEADER_CACHE;
+#elif HAVE_KC
+static struct header_cache
+{
+  KCDB *db;
+  char *folder;
+  unsigned int crc;
+} HEADER_CACHE;
 #elif HAVE_GDBM
 static struct header_cache
 {
@@ -942,6 +951,50 @@
   return tcbdbout(h->db, path, ksize);
 }
 
+#elif HAVE_KC
+static int
+hcache_open_kc (struct header_cache* h, const char* path)
+{
+  h->db = kcdbnew();
+  if (kcdbopen(h->db, path, KCOWRITER | KCOCREATE))
+    return 0;
+  else
+  {
+    kcdbdel(h->db);
+    return -1;
+  }
+}
+
+void
+mutt_hcache_close(header_cache_t *h)
+{
+  if (!h)
+    return;
+
+  kcdbclose(h->db);
+  kcdbdel(h->db);
+  FREE(&h->folder);
+  FREE(&h);
+}
+
+int
+mutt_hcache_delete(header_cache_t *h, const char *filename,
+		   size_t(*keylen) (const char *fn))
+{
+  char path[_POSIX_PATH_MAX];
+  int ksize;
+
+  if (!h)
+    return -1;
+
+  strncpy(path, h->folder, sizeof (path));
+  safe_strcat(path, sizeof (path), filename);
+
+  ksize = strlen(h->folder) + keylen(path + strlen(h->folder));
+
+  return kcdbremove(h->db, path, ksize);
+}
+
 #elif HAVE_GDBM
 static int
 hcache_open_gdbm (struct header_cache* h, const char* path)
@@ -1113,6 +1166,8 @@
   hcache_open = hcache_open_qdbm;
 #elif HAVE_TC
   hcache_open= hcache_open_tc;
+#elif HAVE_TC
+  hcache_open= hcache_open_kc;
 #elif HAVE_GDBM
   hcache_open = hcache_open_gdbm;
 #elif HAVE_DB4
@@ -1169,4 +1224,9 @@
 {
   return "tokyocabinet " _TC_VERSION;
 }
+#elif HAVE_KC
+const char *mutt_hcache_backend (void)
+{
+  return KCVERSION;
+}
 #endif
